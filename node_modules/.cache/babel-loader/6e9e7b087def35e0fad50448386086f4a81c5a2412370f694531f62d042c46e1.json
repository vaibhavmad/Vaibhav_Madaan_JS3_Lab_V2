{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WeatherForm from './components/WeatherForm';\nimport WeatherInfo from './components/WeatherInfo';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const constructURL = city => {\n    const apiKey = 'b8e46d9adfb7fcf6281e3908b07eae97'; // Your new OpenWeather API key\n    return `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n  };\n  const fetchWeather = async city => {\n    const url = constructURL(city);\n    console.log(`Fetching weather data from URL: ${url}`);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.cod === 200) {\n        setWeather(data);\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      alert('Failed to fetch data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherForm, {\n      onFetchWeather: fetchWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"4ilI7lsI7Bma+MT/839dBzjoZdA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WeatherForm","WeatherInfo","jsxDEV","_jsxDEV","App","_s","weather","setWeather","constructURL","city","apiKey","fetchWeather","url","console","log","response","fetch","data","json","cod","alert","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFetchWeather","_c","$RefreshReg$"],"sources":["/Users/vaibhav/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport WeatherForm from './components/WeatherForm';\nimport WeatherInfo from './components/WeatherInfo';\nimport './App.css';\n\nconst App = () => {\n    const [weather, setWeather] = useState(null);\n\n    const constructURL = (city) => {\n        const apiKey = 'b8e46d9adfb7fcf6281e3908b07eae97'; // Your new OpenWeather API key\n        return `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    };\n\n    const fetchWeather = async (city) => {\n        const url = constructURL(city);\n        console.log(`Fetching weather data from URL: ${url}`);\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            if (data.cod === 200) {\n                setWeather(data);\n            } else {\n                alert(data.message);\n            }\n        } catch (error) {\n            alert('Failed to fetch data');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Weather App</h1>\n            <WeatherForm onFetchWeather={fetchWeather} />\n            <WeatherInfo weather={weather} />\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,YAAY,GAAIC,IAAI,IAAK;IAC3B,MAAMC,MAAM,GAAG,kCAAkC,CAAC,CAAC;IACnD,OAAO,qDAAqDD,IAAI,UAAUC,MAAM,eAAe;EACnG,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOF,IAAI,IAAK;IACjC,MAAMG,GAAG,GAAGJ,YAAY,CAACC,IAAI,CAAC;IAC9BI,OAAO,CAACC,GAAG,CAAC,mCAAmCF,GAAG,EAAE,CAAC;IACrD,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MACjC,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,GAAG,KAAK,GAAG,EAAE;QAClBZ,UAAU,CAACU,IAAI,CAAC;MACpB,CAAC,MAAM;QACHG,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;MACvB;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA,CAACH,WAAW;MAAC6B,cAAc,EAAElB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CzB,OAAA,CAACF,WAAW;MAACK,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAACvB,EAAA,CA/BID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}